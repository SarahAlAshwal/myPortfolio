const Data = [
  {
    id: 0,
    img: `${process.env.PUBLIC_URL}/solarImage.png`,
    author: 'author',
    name: 'Solar-Quote',
    description:'A web application that gives users an overview of the cost, savings,and financing information of the solar energy system of their buildings.',
    video: 'u8RHXC_n8eI',
    techImage: '/solarTech.jpg',
    role: 'This project is a team work. I was responsible of understanding and using the PVWatts API inside the project using Axios. I also built several components such as the circular offset bar, the table, and the charts. In addition, I built many functions to do about 50% of the required calculations in the application. Lastly, I was responsible for integrating the work of each member of the team.',
  },
  {
    id: 1,
    img: `${process.env.PUBLIC_URL}/bookPlayList.png`,
    author: 'Sarah',
    name: 'Book Play List',
    description:'A web application that shows book list. The user can choose a book to show its genre, author and the books of the author. Also the user can add a book',
    video: 'znli8NJtxt4',
    techImage: '/BookList.jpg',
    role: 'The purpose of doing this project is to learn GraphQL. So I followed a tutorial to build the whole application. I used for the back-end  express.js , for the database Mongodb, for the query GraphQL and for the  front-end  React ',
  },
  {
    id: 2,
    img: `${process.env.PUBLIC_URL}/scheduler.png`,
    author: 'Sarah',
    name: 'Scheduler',
    description:'A Single Page App (SPA) that was built using React. This App lets students create, edit and delete appointment with interviewers',
    video: 'ivVczf4tZqk',
    techImage: '/sche.jpg',
    role: 'In this project I built all the components and connected them together and used Axios to make requests to an API to get and post appointments. I used JEST and Cypress to test the application. In addition, I  handled edge cases; the users try to book an appointment with no student name and creating an appointment without choosing an interviewer',
  },
  {
    id: 3,
    img: `${process.env.PUBLIC_URL}/tweeter.png`,
    author: 'Sarah',
    name: 'Tweeter',
    description:'A Single Page App (SPA) that lets users share their tweets and see others tweets in a chronological order; showing the newest ones on the top of the page',
    video: 'ZJthqYaswZY',
    techImage: '/tweeter.jpg',
    role: 'In this project, I built the server side. I used jQuery to work with the DOM. I sanitized the input to prevent Cross-site Scripting (XSS). Also, this app is a responsive web application that changes its style based on the screen size',
  },
  {
    id: 4,
    img: `${process.env.PUBLIC_URL}/MyUrlsPage.png`,
    author: 'Sarah',
    name: 'Tiny App',
    description:'A full stack web app that allows the user to shorten long URLâ€™s',
    video: 'Z9Oj1EFogUc',
    techImage: '/tiny.jpg',
    role: ' In this project, I built an HTTP server that handles requests from the browser and responds to those requests by rendering EJS (Embedded JavaScript) template with the required information. I handled users authentication and made sure it showed users their urls only',
  },
];

export default Data; 